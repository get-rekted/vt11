import telebot
from telebot import types
import sqlite3
from telegram import Update
from telegram.ext import Updater
from telegram.ext import CallbackContext
from telegram.ext import Filters
from telegram.ext import MessageHandler
from telegram import KeyboardButton
from telegram import ReplyKeyboardMarkup
from telegram import ReplyKeyboardRemove
from pycoingecko import CoinGeckoAPI
from py_currency_converter import convert

bot = telebot.TeleBot('2097539370:AAHQP8RIzmTLm-WH1ACG1EMTUwMai1IvgOE')



@bot.message_handler(commands=['start'])
def start_bot(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton('Crypto üìà')
    button2 = types.KeyboardButton('USD to üìä')
    button3 = types.KeyboardButton('FAQ üìå')
    button4 = types.KeyboardButton('Feedback üî•')
    markup.add(button4, button1, button2, button3)
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, {0.first_name}. '
                                      '–Ø —Ä–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å! :)\n'
                                      '\n–ß—Ç–æ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å?\n\n<b>–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:</b>\n \nCrypto ‚Äî —É–∑–Ω–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å 10 —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –≤ ' \
                                      '–º–∏—Ä–µ\nUSD to ‚Äî —É–∑–Ω–∞—Ç—å –∫—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞ –ø–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—é –∫ RUB, EUR, UAH\nFAQ ‚Äî –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã\nFeedback ‚Äî –Ω–∞–ø–∏—Å–∞—Ç—å ' \
                                      '—Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–∑–¥–∞—Ç–µ–ª—é –±–æ—Ç–∞' .format(message.from_user), reply_markup=markup, parse_mode='HTML')
    # —Å–æ–∑–¥–∞–µ–º –ë–î
    connect = sqlite3.connect('users.db')
    cursor = connect.cursor()
    cursor.execute("""CREATE TABLE IF NOT EXISTS login_id(
        id INTEGER
    )""")
    connect.commit()

    # –ø—Ä–æ–≤–µ—Ä–∫–∞ id –Ω–∞ –ø–æ–≤—Ç–æ—Ä
    people_id = message.chat.id
    cursor.execute(f"SELECT id FROM login_id WHERE id = {people_id}")
    data = cursor.fetchone()
    print(data)
    if data is None:
        # –¥–æ–±–∞–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
        user_id = [message.chat.id]
        cursor.execute("INSERT INTO login_id VALUES(?);", user_id)
        connect.commit()

# @bot.message_handler(commands=['start'])
# def stbot(message):
#     bot.send_message(message.chat.id, 'privet')

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —é–∑–µ—Ä–∞ –∏–∑ –ë–î
@bot.message_handler(commands=['delete_me_from_db'])
def delete(message):
    connect = sqlite3.connect('users.db')
    cursor = connect.cursor()

    # —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –ë–î
    people_id = message.chat.id
    cursor.execute(f"DELETE FROM login_id WHERE id = {people_id}")
    connect.commit()
    print('–£–¥–∞–ª–∏–ª —é–∑–µ—Ä–∞ –∏–∑ –ë–î')

@bot.message_handler(commands=['help'])
def hlbot(message):
    bot.send_message(message.chat.id, '–¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞ - @durov')



cg = CoinGeckoAPI()
# view = "Crypto üìà"
# usd = 'USD to üìä'
# faq = 'FAQ üìå'
# feedback = 'Feedback üî•'



# –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫—É—Ä—Å–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç

# CRYPTO COURSE
price = cg.get_price(ids='bitcoin,litecoin,ethereum,terra-luna,solana,ripple,polkadot,dogecoin,chainlink',
                     vs_currencies='usd')
crypto = f"Bitcoin (BTC) ‚Äî {price['bitcoin']['usd']:.2f}$" \
         + f"\nLitecoin (LTC) ‚Äî {price['litecoin']['usd']:.2f}$" \
         + f"\nEthereum (ETH) ‚Äî {price['ethereum']['usd']:.2f}$"\
         + f"\nTerra (LUNA) ‚Äî {price['terra-luna']['usd']:.2f}$"\
         + f"\nSolana (SOL) ‚Äî {price['solana']['usd']:.2f}$"\
         + f"\nXRP (XRP) ‚Äî {price['ripple']['usd']:.2f}$"\
         + f"\nPolkadot (DOT) ‚Äî {price['polkadot']['usd']:.2f}$"\
         + f"\nDogecoin (DOGE) ‚Äî {price['dogecoin']['usd']:.2f}$"\
         + f"\nChainlink (LINK) ‚Äî {price['chainlink']['usd']:.2f}$"\
        # + f"\nAave (AAVE) ‚Äî {price['aave']['usd']:.2f}$"


course = convert(amount=1, to=['RUB', 'EUR', 'UAH'])
usd =f"1 USD = {course['RUB']} RUB"\
     + f"\n1 USD = {course['EUR']} EUR"\
     + f"\n1 USD = {course['UAH']} UAH"

# News








@bot.message_handler(content_types=['text'])
def send_message_handler(message):
    if message.chat.type == 'private':

        #CRYPTO
        if message.text == "Crypto üìà":
            bot.send_message(message.chat.id, crypto)

        #USD
        elif message.text == 'USD to üìä':
            bot.send_message(message.chat.id, usd)

        #FAQ
        elif message.text == 'FAQ üìå':
            bot.send_message(message.chat.id, '<b>–û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã:</b>\n\n 1) –° –∫–∞–∫–æ–≥–æ —Å–∞–π—Ç–∞ –±–æ—Ç –±–µ—Ä–µ—Ç —Ü–µ–Ω—ã? - –° —Å–∞–π—Ç–∞ CoinGecko.\n\n 2) –ü–æ—á–µ–º—É CoinGecko? - '
             '–ï–∂–µ–º–∏–Ω—É—Ç–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –º–æ–Ω–µ—Ç –∏ –Ω–∞–ª–∏—á–∏–µ API.\n\n 3) –ö–∞–∫ –ø—Ä–∏—à–ª–∞ –∏–¥–µ—è –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞? - '
             '–°–ø–æ–Ω—Ç–∞–Ω–Ω–æ.', parse_mode='HTML')

        #FEEDBACK
        elif message.text == 'Feedback üî•':
            bot.send_message(message.chat.id, '<b>–°–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞</b> - Get Rekted \n\n VK - @durov\n\n TG - @durov',
        parse_mode='HTML')

        else:
            bot.send_message(message.chat.id, '–¢–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ù–∞–ø–∏—à–∏—Ç–µ ‚Äî /start ‚Äî —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–º–∞–Ω–¥.')



    # if message.chat.type == 'private':
    #     # text = update.message.text
    #     if message.text == view:
    #         button_view_handler()
    #         return button_view_handler(update=update, context=context)
    #     elif message.text == usd:
    #         return button_usd_handler(update=update, context=context)
    #     elif message.text == faq:
    #         return button_faq_handler(update=update, context=context)
    #     elif message.text == feedback:
    #         return button_feedback_handler(update=update, context=context)
    #     reply_markup = ReplyKeyboardMarkup(
    #         keyboard=[
    #             [
    #                 KeyboardButton(text=view),
    #                 KeyboardButton(text=usd),
    #                 KeyboardButton(text=faq),
    #                 KeyboardButton(text=feedback)
    #             ],
    #         ],
    #         resize_keyboard=True,
    #     )
@bot.message_handler(content_types=[''])
def answer(message):
    bot.send_message(message.chat.id, '1')
        # update.message.reply_text(
        #     text='–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å?\n\n<b>–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:</b>\n \nCrypto ‚Äî —É–∑–Ω–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å 10 —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö '
        #          '–∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –≤ –º–∏—Ä–µ\nUSD to ‚Äî —É–∑–Ω–∞—Ç—å –∫—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞ –ø–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—é –∫ RUB, EUR, UAH\nFAQ ‚Äî –æ—Ç–≤–µ—Ç—ã –Ω–∞ '
        #          '–≤–æ–ø—Ä–æ—Å—ã\nFeedback ‚Äî –Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–∑–¥–∞—Ç–µ–ª—é –±–æ—Ç–∞', parse_mode='HTML'
        #     # reply_markup=reply_markup,
        # )


# –ù–∞—á–∞–ª–æ
# def main():
#     print('–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞ ‚Äî online!')
#     updater = Updater(
#         token='2083304857:AAGPdusBhGpRgIeO90ReNK8CQ2u-wrEkrWQ',
#         use_context=True,
#     )
#     updater.dispatcher.add_handler(MessageHandler(filters=Filters.all, callback=message_handler))
#     updater.start_polling()
#     updater.idle()


# if __name__ == '__main__':
#     main()

print('–ë–æ—Ç –≤—ã—à–µ–ª –≤ online!')
bot.polling()
