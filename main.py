# –≤ venv —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å PyTelegramBotAPI, telegram, python-telegram-bot, pycoingecko, py-currency-converter


from telegram import Update
from telegram.ext import Updater
from telegram.ext import CallbackContext
from telegram.ext import Filters
from telegram.ext import MessageHandler
from telegram import KeyboardButton
from telegram import ReplyKeyboardMarkup
from telegram import ReplyKeyboardRemove
from pycoingecko import CoinGeckoAPI
from py_currency_converter import convert

cg = CoinGeckoAPI()

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
view = "Crypto üìà"
usd = 'USD to üìä'
faq = 'FAQ üìå'
feedback = 'Feedback üî•'

# –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫—É—Ä—Å–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç
def button_view_handler(update: Update, context: CallbackContext):
    price = cg.get_price(ids='bitcoin,litecoin,ethereum,terra-luna, solana, ripple, polkadot, dogecoin, chainlink', vs_currencies='usd')
    update.message.reply_text(
        text=f"Bitcoin (BTC) ‚Äî {price['bitcoin']['usd']:.2f}$"
        + f"\nLitecoin (LTC) ‚Äî {price['litecoin']['usd']:.2f}$"
        + f"\nEthereum (ETH) ‚Äî {price['ethereum']['usd']:.2f}$"
        + f"\nTerra (LUNA) ‚Äî {price['terra-luna']['usd']:.2f}$"
        + f"\nSolana (SOL) ‚Äî {price['solana']['usd']:.2f}$"
        + f"\nXRP (XRP) ‚Äî {price['ripple']['usd']:.2f}$"
        + f"\nPolkadot (DOT) ‚Äî {price['polkadot']['usd']:.2f}$"
        + f"\nDogecoin (DOGE) ‚Äî {price['dogecoin']['usd']:.2f}$"
        + f"\nChainlink (LINK) ‚Äî {price['chainlink']['usd']:.2f}$"
        )

# –ö–Ω–æ–ø–∫–∞ FAQ
def button_faq_handler(update: Update, context: CallbackContext):
    update.message.reply_text(
    text='–û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã:\n\n 1) –° –∫–∞–∫–æ–≥–æ —Å–∞–π—Ç–∞ –±–æ—Ç –±–µ—Ä–µ—Ç —Ü–µ–Ω—ã? - –° —Å–∞–π—Ç–∞ CoinGecko.\n\n 2) –ü–æ—á–µ–º—É CoinGecko? - '
         '–ï–∂–µ–º–∏–Ω—É—Ç–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –º–æ–Ω–µ—Ç –∏ –Ω–∞–ª–∏—á–∏–µ API.\n\n 3) –ö–∞–∫ –ø—Ä–∏—à–ª–∞ –∏–¥–µ—è –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞? - '
         '–°–ø–æ–Ω—Ç–∞–Ω–Ω–æ. '
    )

# –ö–Ω–æ–ø–∫–∞ Feedback
def button_feedback_handler(update: Update, context: CallbackContext):
    update.message.reply_text(
    text='–°–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞ - –ê—Ä—É—Ç—é–Ω—è–Ω –ê. –î.\n\n VK - https://vk.com/arutyunyan__777\n\n TG - @durov'
    )

# –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫—É—Ä—Å–∞ –¥–æ–ª–ª–∞—Ä–∞
def button_usd_handler(update: Update, context: CallbackContext):
    course = convert(amount=1, to=['RUB', 'EUR', 'UAH'])
    update.message.reply_text(
        text=f"1 USD = {course['RUB']} RUB"
        + f"\n1 USD = {course['EUR']} EUR"
        + f"\n1 USD = {course['UAH']} UAH"
    )

# –û—Ç–≤–µ—Ç —é–∑–µ—Ä—É –ø–æ—Å–ª–µ /start
def message_handler(update: Update, context: CallbackContext):
    text = update.message.text
    if text == view:
        return button_view_handler(update=update, context=context)
    elif text == usd:
        return button_usd_handler(update=update, context=context)
    elif text == faq:
        return button_faq_handler(update=update, context=context)
    elif text == feedback:
        return button_feedback_handler(update=update, context=context)
    reply_markup = ReplyKeyboardMarkup(
        keyboard=[
            [
            KeyboardButton(text=view),
            KeyboardButton(text=usd),
            KeyboardButton(text=faq),
            KeyboardButton(text=feedback)
            ],
        ],
        resize_keyboard=True,
    )
    update.message.reply_text(
        text='–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å?\n\n–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n \nCrypto ‚Äî —É–∑–Ω–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å 10 —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö '
             '–∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –≤ –º–∏—Ä–µ\nUSD to ‚Äî —É–∑–Ω–∞—Ç—å –∫—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞ –ø–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—é –∫ RUB, EUR, UAH\nFAQ ‚Äî –æ—Ç–≤–µ—Ç—ã –Ω–∞ '
             '–≤–æ–ø—Ä–æ—Å—ã\nFeedback ‚Äî –Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–∑–¥–∞—Ç–µ–ª—é –±–æ—Ç–∞',
        reply_markup=reply_markup,
    )

# –ù–∞—á–∞–ª–æ
def main():
    print('–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞ ‚Äî online!')
    updater = Updater(
    token='2083304857:AAGPdusBhGpRgIeO90ReNK8CQ2u-wrEkrWQ',
    use_context=True,
    )
    updater.dispatcher.add_handler(MessageHandler(filters=Filters.all, callback=message_handler))
    updater.start_polling()
    updater.idle()

if __name__=='__main__':
    main()